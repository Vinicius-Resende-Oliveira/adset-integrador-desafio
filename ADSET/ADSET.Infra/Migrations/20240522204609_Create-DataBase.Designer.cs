// <auto-generated />
using System;
using ADSET.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADSET.Infra.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20240522204609_Create-DataBase")]
    partial class CreateDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ADSET.Domain.Entities.Foto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(761));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Fotos", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 98, DateTimeKind.Local).AddTicks(9811));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Marcas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7425),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7425),
                            IsActive = true,
                            Nome = "Fiat"
                        },
                        new
                        {
                            Id = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7430),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7430),
                            IsActive = true,
                            Nome = "Ford"
                        },
                        new
                        {
                            Id = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7431),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7432),
                            IsActive = true,
                            Nome = "GMC/Chevrolet"
                        },
                        new
                        {
                            Id = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7433),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7433),
                            IsActive = true,
                            Nome = "Toyota"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 98, DateTimeKind.Local).AddTicks(8020));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("35d033b2-ac66-4af1-af03-dd2991621f48"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7439),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7440),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Uno"
                        },
                        new
                        {
                            Id = new Guid("25204173-5066-4ba1-950e-82397ecf99d9"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7443),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7443),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Toro"
                        },
                        new
                        {
                            Id = new Guid("133ed150-087d-407a-9606-f91e7ca4a677"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7444),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7444),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "147"
                        },
                        new
                        {
                            Id = new Guid("0263304b-8d53-4e20-9347-11078b2ae8ac"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7446),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7446),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "500"
                        },
                        new
                        {
                            Id = new Guid("cae40ea7-3d14-436f-8942-7d91425e4536"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7447),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7447),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Bravo"
                        },
                        new
                        {
                            Id = new Guid("b153c00c-a6c7-47f2-81f0-2aa4f8af2184"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7450),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7451),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Strada"
                        },
                        new
                        {
                            Id = new Guid("351c0836-30e1-4f59-a0be-0ff7d13e6d1d"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7452),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7452),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Marea"
                        },
                        new
                        {
                            Id = new Guid("8ed910d3-2dc7-4137-9462-bca9ac954b60"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7453),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7454),
                            IsActive = true,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            Nome = "Tempra"
                        },
                        new
                        {
                            Id = new Guid("71870142-2205-422b-8c2a-f4508c4bcd33"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7456),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7456),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Ka"
                        },
                        new
                        {
                            Id = new Guid("25f04d9d-4cd2-4acd-a440-ebea4e4b391d"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7457),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7458),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Mustang"
                        },
                        new
                        {
                            Id = new Guid("885315fd-a9bf-406a-b5c6-8272e40d9fe3"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7459),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7459),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Range"
                        },
                        new
                        {
                            Id = new Guid("39fc282a-90b8-4bea-b42e-41dc5e793367"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7460),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7460),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Belina"
                        },
                        new
                        {
                            Id = new Guid("31b36c71-0254-4be3-a63c-43b26c59831f"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7461),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7462),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Del Rey"
                        },
                        new
                        {
                            Id = new Guid("c8c0d2ce-3459-4df5-bc0e-6fc7d9d3754f"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7464),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7465),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Verona"
                        },
                        new
                        {
                            Id = new Guid("5aa778a8-4a52-460f-899e-1b5a20156762"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7466),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7466),
                            IsActive = true,
                            MarcaId = new Guid("284399f5-c9a1-4c6e-a475-2214c2cba0d2"),
                            Nome = "Pampa"
                        },
                        new
                        {
                            Id = new Guid("95872650-b285-4100-ae76-ee2e315ab566"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7470),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7470),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "S10"
                        },
                        new
                        {
                            Id = new Guid("d7aaa453-216d-409c-899f-1f3ef583e7d5"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7472),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7472),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "C10"
                        },
                        new
                        {
                            Id = new Guid("ad9420f5-7a8e-4bb1-80ed-8aa3b23ec56e"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7474),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7474),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Camaro"
                        },
                        new
                        {
                            Id = new Guid("5799fd92-34fe-45ec-8005-03f0c479ea63"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7475),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7475),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Blaze"
                        },
                        new
                        {
                            Id = new Guid("f5cc4b13-8f87-4ca8-aef6-f0a252326e86"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7476),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7477),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Agile"
                        },
                        new
                        {
                            Id = new Guid("2cfde1f1-ec7e-4102-8480-2fe371b6c42c"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7478),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7479),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Onix"
                        },
                        new
                        {
                            Id = new Guid("b427468a-c091-44f4-a245-dd5df450e6d0"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7481),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7481),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Silverado"
                        },
                        new
                        {
                            Id = new Guid("f5180371-7eba-4989-9068-be4581d2a511"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7482),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7483),
                            IsActive = true,
                            MarcaId = new Guid("0525e486-1afc-4a3d-9237-3782f0c15adc"),
                            Nome = "Caravan"
                        },
                        new
                        {
                            Id = new Guid("9ba94021-230a-4053-a6ab-80bc6bd986d0"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7486),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7486),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Corolla"
                        },
                        new
                        {
                            Id = new Guid("1204b932-4dcf-4478-822f-97885cb35352"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7488),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7489),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Hilux"
                        },
                        new
                        {
                            Id = new Guid("e3156a9f-56cf-4728-ac6c-1cefad127cd2"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7490),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7490),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "SW4"
                        },
                        new
                        {
                            Id = new Guid("2cab4a98-69f7-4f1e-9cd6-2d21ea6b0c68"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7491),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7491),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Etios"
                        },
                        new
                        {
                            Id = new Guid("f67c0319-0012-4ba2-b444-7d52ecadf14d"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7492),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7493),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Camry"
                        },
                        new
                        {
                            Id = new Guid("9277a5ff-d2dc-4bc5-ae60-58b70dc32e3a"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7494),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7494),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "RAV4"
                        },
                        new
                        {
                            Id = new Guid("494b7ef3-f475-4869-81e4-bfa561310196"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7497),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7497),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Supra"
                        },
                        new
                        {
                            Id = new Guid("af33c664-645c-4b27-8492-e1702ad70bc1"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7498),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7498),
                            IsActive = true,
                            MarcaId = new Guid("4ed86015-3fdd-4132-a08a-6a0f8d77c136"),
                            Nome = "Yaris"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Opcional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(2745));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Opcionais", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73edc3c9-6ada-4471-b5c4-248d05e5c4bc"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7342),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7346),
                            IsActive = true,
                            Nome = "Ar Condicionado"
                        },
                        new
                        {
                            Id = new Guid("11797cce-56fd-4817-841a-e77d45650d4b"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7349),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7349),
                            IsActive = true,
                            Nome = "Teto Solar"
                        },
                        new
                        {
                            Id = new Guid("e420df33-5c78-47a8-85cf-35efcb04f6bd"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7351),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7351),
                            IsActive = true,
                            Nome = "Alarme"
                        },
                        new
                        {
                            Id = new Guid("c29799c7-6e6c-493b-95b0-79f6b1af967b"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7361),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7361),
                            IsActive = true,
                            Nome = "Air Bag"
                        },
                        new
                        {
                            Id = new Guid("d53c025d-d6fa-4ec6-9c4e-7d175afae0f5"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7362),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7362),
                            IsActive = true,
                            Nome = "Som"
                        },
                        new
                        {
                            Id = new Guid("9445011c-00a2-4d9b-91b8-d3359c3dbc54"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7365),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7365),
                            IsActive = true,
                            Nome = "Trava Elétrica"
                        },
                        new
                        {
                            Id = new Guid("8e0f30ba-4d01-4bd1-bf21-274cdc8902eb"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7366),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7366),
                            IsActive = true,
                            Nome = "Vidro Elétrico"
                        },
                        new
                        {
                            Id = new Guid("21624df6-bf8a-418c-bfb9-9d25313f6a0b"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7367),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7368),
                            IsActive = true,
                            Nome = "Sensor de Ré"
                        },
                        new
                        {
                            Id = new Guid("d0ccbcfb-5a52-4590-ad7c-a2bd83348a2d"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7369),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7369),
                            IsActive = true,
                            Nome = "Câmera de Ré"
                        },
                        new
                        {
                            Id = new Guid("c0c42d25-8eae-43c6-a693-04271ac26af6"),
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7370),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7371),
                            IsActive = true,
                            Nome = "Banco de Couro"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(6414));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Pacotes", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasMaxLength(9999)
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 98, DateTimeKind.Local).AddTicks(5145));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveFoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Km")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9999)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b481e3aa-cf21-4c52-a10c-d412a376d19c"),
                            Ano = 2015,
                            Cor = "Preto",
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7593),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7593),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 10000,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            ModeloId = new Guid("25204173-5066-4ba1-950e-82397ecf99d9"),
                            Placa = "ABC1D34",
                            Preco = 89999m
                        },
                        new
                        {
                            Id = new Guid("5bea5b84-3f27-47cc-8045-a227583287bf"),
                            Ano = 2011,
                            Cor = "Branco",
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7631),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7631),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 15000,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            ModeloId = new Guid("133ed150-087d-407a-9606-f91e7ca4a677"),
                            Placa = "CBD1D34",
                            Preco = 59999m
                        },
                        new
                        {
                            Id = new Guid("1c652922-0df7-4f05-891d-0134fbd0dec8"),
                            Ano = 2012,
                            Cor = "Prata",
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7674),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7675),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 35000,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            ModeloId = new Guid("0263304b-8d53-4e20-9347-11078b2ae8ac"),
                            Placa = "CNH1D34",
                            Preco = 49999m
                        },
                        new
                        {
                            Id = new Guid("7f4e2c53-be06-4d17-af32-002f4c05265d"),
                            Ano = 2019,
                            Cor = "Vermelho",
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7692),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7692),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 90000,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            ModeloId = new Guid("cae40ea7-3d14-436f-8942-7d91425e4536"),
                            Placa = "CAB1D34",
                            Preco = 99999m
                        },
                        new
                        {
                            Id = new Guid("1e6b5639-a70f-4b19-8ffa-ba3d21ee154c"),
                            Ano = 2020,
                            Cor = "Azul",
                            DateCreated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7710),
                            DateUpdated = new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(7710),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 150000,
                            MarcaId = new Guid("e5013aa0-8e78-403d-a0aa-19cc3678d353"),
                            ModeloId = new Guid("b153c00c-a6c7-47f2-81f0-2aa4f8af2184"),
                            Placa = "DCA1D34",
                            Preco = 109999m
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 22, 17, 46, 9, 99, DateTimeKind.Local).AddTicks(3776));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("OpcionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OpcionalId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("VeiculoOpcional", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Foto", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Pacote", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Pacotes")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Marca", "Marca")
                        .WithMany("Veiculos")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.HasOne("ADSET.Domain.Entities.Modelo", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("ModeloId")
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Opcional", "Opcional")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Opcional");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Marca", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Opcional", b =>
                {
                    b.Navigation("VeiculoOpcionais");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Pacotes");

                    b.Navigation("VeiculoOpcionais");
                });
#pragma warning restore 612, 618
        }
    }
}
