// <auto-generated />
using System;
using ADSET.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADSET.Infra.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20240528154145_Update-Foto-Entity")]
    partial class UpdateFotoEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ADSET.Domain.Entities.Foto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 126, DateTimeKind.Local).AddTicks(7001));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Fotos", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 126, DateTimeKind.Local).AddTicks(5946));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Marcas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5494),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5494),
                            IsActive = true,
                            Nome = "Fiat"
                        },
                        new
                        {
                            Id = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5497),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5497),
                            IsActive = true,
                            Nome = "Ford"
                        },
                        new
                        {
                            Id = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5498),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5498),
                            IsActive = true,
                            Nome = "GMC/Chevrolet"
                        },
                        new
                        {
                            Id = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5501),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5502),
                            IsActive = true,
                            Nome = "Toyota"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 126, DateTimeKind.Local).AddTicks(4038));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("631e9a01-834e-490f-ab99-bb7c32658a3c"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5507),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5508),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Uno"
                        },
                        new
                        {
                            Id = new Guid("049f28d8-2570-43c6-8bba-2e20218a7853"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5510),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5511),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Toro"
                        },
                        new
                        {
                            Id = new Guid("afed83be-023a-47df-bf51-a098a86247d0"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5512),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5512),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "147"
                        },
                        new
                        {
                            Id = new Guid("e2b007f8-bf64-4638-bb20-0c2a602cdd3c"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5514),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5514),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "500"
                        },
                        new
                        {
                            Id = new Guid("d31f94e9-8c96-422e-8da7-39fd0e271411"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5515),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5515),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Bravo"
                        },
                        new
                        {
                            Id = new Guid("16d8b4fa-47bd-4a1d-9fcf-f79a2e50720b"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5517),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5517),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Strada"
                        },
                        new
                        {
                            Id = new Guid("7e800676-b814-4f88-a767-bd663d21fa36"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5518),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5519),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Marea"
                        },
                        new
                        {
                            Id = new Guid("ee29b99b-004f-4133-9f75-1d4a75470930"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5521),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5521),
                            IsActive = true,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            Nome = "Tempra"
                        },
                        new
                        {
                            Id = new Guid("f6a46ab0-9ce2-4e2b-ab2e-85fd9b487a65"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5523),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5523),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Ka"
                        },
                        new
                        {
                            Id = new Guid("af2ebeed-ea30-49be-bb23-aff4fab68d55"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5525),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5525),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Mustang"
                        },
                        new
                        {
                            Id = new Guid("64a3b342-64d9-4225-8d99-e6c04433513c"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5526),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5527),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Range"
                        },
                        new
                        {
                            Id = new Guid("dc143caf-9ac1-4031-9b65-c5f09c61ad43"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5528),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5528),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Belina"
                        },
                        new
                        {
                            Id = new Guid("1ba9b05e-eb5a-4def-bbcd-088c0599559a"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5529),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5530),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Del Rey"
                        },
                        new
                        {
                            Id = new Guid("8d379b92-9284-4a8d-b52c-cba6e237e9fb"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5531),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5532),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Verona"
                        },
                        new
                        {
                            Id = new Guid("1d550fd7-b22f-4a81-ac8b-609541d12dcb"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5533),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5533),
                            IsActive = true,
                            MarcaId = new Guid("e9bfb97e-5df8-4df8-99ac-8eedaaebbd9d"),
                            Nome = "Pampa"
                        },
                        new
                        {
                            Id = new Guid("1c5f20cd-3c40-400c-9be1-2461776fe647"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5539),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5540),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "S10"
                        },
                        new
                        {
                            Id = new Guid("847c48cf-b683-4955-ad51-42eb7a577b50"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5541),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5541),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "C10"
                        },
                        new
                        {
                            Id = new Guid("bcdad1a2-2679-4eb9-8829-60b9947b5915"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5542),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5543),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Camaro"
                        },
                        new
                        {
                            Id = new Guid("80e14412-67d7-406c-84b0-d7522e3d03eb"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5544),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5544),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Blaze"
                        },
                        new
                        {
                            Id = new Guid("272abf82-ea3d-455e-9dd2-5c258048f60a"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5546),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5546),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Agile"
                        },
                        new
                        {
                            Id = new Guid("98291e2f-8ac3-4fc2-af67-bf967e54e904"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5548),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5548),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Onix"
                        },
                        new
                        {
                            Id = new Guid("42edd37e-4f4c-4558-9cc5-4ad04da013f6"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5549),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5549),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Silverado"
                        },
                        new
                        {
                            Id = new Guid("87d5c3e8-6f02-4531-a8b5-3caced2b2dc1"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5550),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5551),
                            IsActive = true,
                            MarcaId = new Guid("528ce54b-a3ef-4fe7-a2b8-13e2d035c96b"),
                            Nome = "Caravan"
                        },
                        new
                        {
                            Id = new Guid("8a9f847d-bb05-4276-ba9d-dbdb89e4512b"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5555),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5556),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Corolla"
                        },
                        new
                        {
                            Id = new Guid("8fe0a606-7b2e-4417-ab30-0f3d683ab03d"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5557),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5557),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Hilux"
                        },
                        new
                        {
                            Id = new Guid("bb1cdea8-d04a-4ac1-9223-a6ad8c4c5b7c"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5558),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5559),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "SW4"
                        },
                        new
                        {
                            Id = new Guid("00662174-85fa-4f62-b64f-6795706b2e4c"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5560),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5560),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Etios"
                        },
                        new
                        {
                            Id = new Guid("cde9db18-2eb7-44be-8ffc-ca179e95dd6e"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5561),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5561),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Camry"
                        },
                        new
                        {
                            Id = new Guid("12955a22-601a-40f5-b647-4ad24a53bf35"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5563),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5563),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "RAV4"
                        },
                        new
                        {
                            Id = new Guid("86c1f55a-0451-4e34-b7b1-0058f3d46c68"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5564),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5564),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Supra"
                        },
                        new
                        {
                            Id = new Guid("15a84437-5926-438c-92a1-7349d69a5935"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5565),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5566),
                            IsActive = true,
                            MarcaId = new Guid("744d644b-5007-4194-bd27-7213e004d1c1"),
                            Nome = "Yaris"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Opcional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 126, DateTimeKind.Local).AddTicks(9424));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Opcionais", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("230fdb17-59b4-4f16-8864-7ea89fcc3f70"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5455),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5459),
                            IsActive = true,
                            Nome = "Ar Condicionado"
                        },
                        new
                        {
                            Id = new Guid("ad07cc9c-cf0d-4846-bd3e-6e44d48e9bbe"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5461),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5462),
                            IsActive = true,
                            Nome = "Teto Solar"
                        },
                        new
                        {
                            Id = new Guid("fa9ec749-497f-489a-b116-b1dafde6293d"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5463),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5463),
                            IsActive = true,
                            Nome = "Alarme"
                        },
                        new
                        {
                            Id = new Guid("ad97ada6-6eec-4cb5-a4ba-e68e4f7cee1f"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5464),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5465),
                            IsActive = true,
                            Nome = "Air Bag"
                        },
                        new
                        {
                            Id = new Guid("52ce5c8d-e708-4135-98ae-ffedfb550156"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5466),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5466),
                            IsActive = true,
                            Nome = "Som"
                        },
                        new
                        {
                            Id = new Guid("644d9f2c-79bb-47f2-a6a7-b9f10a12d0da"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5483),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5483),
                            IsActive = true,
                            Nome = "Trava Elétrica"
                        },
                        new
                        {
                            Id = new Guid("a2fa848d-15af-4368-bfe6-3e99ef32608d"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5484),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5484),
                            IsActive = true,
                            Nome = "Vidro Elétrico"
                        },
                        new
                        {
                            Id = new Guid("f7f5798d-a2ad-48ba-acb7-80a3df7a986f"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5485),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5486),
                            IsActive = true,
                            Nome = "Sensor de Ré"
                        },
                        new
                        {
                            Id = new Guid("0b25b34a-8852-485c-ae49-2592b5d292f7"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5487),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5487),
                            IsActive = true,
                            Nome = "Câmera de Ré"
                        },
                        new
                        {
                            Id = new Guid("7eee7aa2-2e8f-470b-bbac-7fedf479230d"),
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5489),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5489),
                            IsActive = true,
                            Nome = "Banco de Couro"
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(4368));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Pacotes", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasMaxLength(9999)
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 126, DateTimeKind.Local).AddTicks(815));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveFoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Km")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9999)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("185239b8-ad8b-45a8-b81e-446447133084"),
                            Ano = 2015,
                            Cor = "Preto",
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5685),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5686),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 10000,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            ModeloId = new Guid("049f28d8-2570-43c6-8bba-2e20218a7853"),
                            Placa = "ABC1D34",
                            Preco = 89999m
                        },
                        new
                        {
                            Id = new Guid("e8eb4822-69c1-4755-86a1-ae0ba884ab2a"),
                            Ano = 2011,
                            Cor = "Branco",
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5750),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5751),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 15000,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            ModeloId = new Guid("afed83be-023a-47df-bf51-a098a86247d0"),
                            Placa = "CBD1D34",
                            Preco = 59999m
                        },
                        new
                        {
                            Id = new Guid("4c341803-4fcc-4b87-b9ed-4b8e5165350c"),
                            Ano = 2012,
                            Cor = "Prata",
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5769),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5769),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 35000,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            ModeloId = new Guid("e2b007f8-bf64-4638-bb20-0c2a602cdd3c"),
                            Placa = "CNH1D34",
                            Preco = 49999m
                        },
                        new
                        {
                            Id = new Guid("a71b5f38-cd0d-41ae-b44d-96edc162f1da"),
                            Ano = 2019,
                            Cor = "Vermelho",
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5788),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5788),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 90000,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            ModeloId = new Guid("d31f94e9-8c96-422e-8da7-39fd0e271411"),
                            Placa = "CAB1D34",
                            Preco = 99999m
                        },
                        new
                        {
                            Id = new Guid("6703548a-44f2-4b34-ac8f-f6d23d7e2d22"),
                            Ano = 2020,
                            Cor = "Azul",
                            DateCreated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5806),
                            DateUpdated = new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(5806),
                            HaveFoto = false,
                            IsActive = true,
                            Km = 150000,
                            MarcaId = new Guid("a634ecd8-2b13-480e-bdc1-acd3f3c3012a"),
                            ModeloId = new Guid("16d8b4fa-47bd-4a1d-9fcf-f79a2e50720b"),
                            Placa = "DCA1D34",
                            Preco = 109999m
                        });
                });

            modelBuilder.Entity("ADSET.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 28, 12, 41, 45, 127, DateTimeKind.Local).AddTicks(1176));

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("OpcionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OpcionalId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("VeiculoOpcional", (string)null);
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Foto", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Pacote", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Pacotes")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Marca", "Marca")
                        .WithMany("Veiculos")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.HasOne("ADSET.Domain.Entities.Modelo", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("ModeloId")
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.HasOne("ADSET.Domain.Entities.Opcional", "Opcional")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ADSET.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Opcional");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Marca", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Modelo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Opcional", b =>
                {
                    b.Navigation("VeiculoOpcionais");
                });

            modelBuilder.Entity("ADSET.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Pacotes");

                    b.Navigation("VeiculoOpcionais");
                });
#pragma warning restore 612, 618
        }
    }
}
